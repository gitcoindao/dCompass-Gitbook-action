import{getResolver as _}from"@ceramicnetwork/3id-did-resolver";import{CeramicClient as z}from"@ceramicnetwork/http-client";import{Caip10Link as C}from"@ceramicnetwork/stream-caip10-link";import{DataModel as D}from"@glazed/datamodel";import{DIDDataStore as q}from"@glazed/did-datastore";import{isDIDstring as F}from"@glazed/did-datastore";import{TileLoader as A}from"@glazed/tile-loader";import{Resolver as x}from"did-resolver";import{getResolver as M}from"key-did-resolver";import{AccountID as I}from"caip";const S={definitions:{cryptoAccounts:"kjzl6cwe1jw149z4rvwzi56mjjukafta30kojzktd9dsrgqdgz4wlnceu59f95f",alsoKnownAs:"kjzl6cwe1jw146zfmqa10a5x1vry6au3t362p44uttz4l0k4hi88o41zplhmxnf",basicProfile:"kjzl6cwe1jw145cjbeko9kil8g9bxszjhyde21ob8epxuxkaon1izyqsu8wgcic"},schemas:{CryptoAccounts:"ceramic://k3y52l7qbv1frypussjburqg4fykyyycfu0p9znc75lv2t5cg4xaslhagkd7h7mkg",AlsoKnownAs:"ceramic://k3y52l7qbv1fryojt8n8cw2k04p9wp67ly59iwqs65dejso566fij5wsdrb871yio",BasicProfile:"ceramic://k3y52l7qbv1frxt706gqfzmq6cbqdkptzk8uudaryhlkf6ly9vx21hqu4r6k1jqio"},tiles:{}};function k(e){try{return I.parse(e),!0}catch{return!1}}var v=(e,t,r)=>{if(!t.has(e))throw TypeError("Cannot "+r)},i=(e,t,r)=>(v(e,t,"read from private field"),r?r.call(e):t.get(e)),c=(e,t,r)=>{if(t.has(e))throw TypeError("Cannot add the same private member more than once");t instanceof WeakSet?t.add(e):t.set(e,r)},s=(e,t,r,a)=>(v(e,t,"write to private field"),a?a.call(e,r):t.set(e,r),r),o,n,d,h,p;const u={local:"http://localhost:7007","mainnet-gateway":"https://gateway.ceramic.network","testnet-clay":"https://ceramic-clay.3boxlabs.com","testnet-clay-gateway":"https://gateway-clay.ceramic.network"};class W{constructor(t){c(this,o,void 0),c(this,n,void 0),c(this,d,void 0),c(this,h,void 0),c(this,p,void 0);const r=new z(u[t.ceramic]??t.ceramic),a=t.loader??new A({ceramic:r,cache:t.cache});s(this,o,r),s(this,n,new D({autopin:!0,loader:a,model:t.model??S})),s(this,d,new q({autopin:!0,ceramic:r,loader:a,model:i(this,n)})),s(this,h,new x({...M(),..._(i(this,o))})),s(this,p,a)}get ceramic(){return i(this,o)}get dataModel(){return i(this,n)}get dataStore(){return i(this,d)}get resolver(){return i(this,h)}get tileLoader(){return i(this,p)}async getAccountDID(t){const r=await C.fromAccount(i(this,o),t);if(r.did==null)throw new Error(`No DID found for ${t}`);return r.did}async toDID(t){return k(t)?await this.getAccountDID(t):t}async get(t,r){const a=await this.toDID(r);return await i(this,d).get(t,a)}}o=new WeakMap,n=new WeakMap,d=new WeakMap,h=new WeakMap,p=new WeakMap;var y=(e,t,r)=>{if(!t.has(e))throw TypeError("Cannot "+r)},f=(e,t,r)=>(y(e,t,"read from private field"),r?r.call(e):t.get(e)),g=(e,t,r)=>{if(t.has(e))throw TypeError("Cannot add the same private member more than once");t instanceof WeakSet?t.add(e):t.set(e,r)},m=(e,t,r,a)=>(y(e,t,"write to private field"),a?a.call(e,r):t.set(e,r),r),w,l;class E{constructor(t){g(this,w,void 0),g(this,l,void 0),m(this,w,t.core),m(this,l,t.id)}get id(){return f(this,l)}async get(t){return await f(this,w).dataStore.get(t,f(this,l))}}w=new WeakMap,l=new WeakMap;export{u as CERAMIC_URLS,W as Core,E as PublicID,k as isCAIP10string,F as isDIDstring};
//# sourceMappingURL=lib.mjs.map
